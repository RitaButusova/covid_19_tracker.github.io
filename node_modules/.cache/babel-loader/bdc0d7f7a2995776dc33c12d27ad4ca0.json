{"ast":null,"code":"var _jsxFileName = \"D:\\\\covid_19_tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  console.log(dailyData);\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        data\n      }) => data),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          incidentRate\n        }) => incidentRate),\n        label: \"Incident Rate\",\n        borderColor: 'black',\n        backgroundColor: 'rgba(21, 0, 255, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["D:/covid_19_tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","console","log","lineChart","labels","map","datasets","label","borderColor","fill","backgroundColor","incidentRate","barChart","value","legend","display","title","text","container"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api'\r\nimport {Line, Bar} from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        } \r\n        fetchAPI();\r\n    }, []);\r\n    console.log(dailyData)\r\n    const lineChart = (\r\n        \r\n        dailyData[0] ? (<Line\r\n            data={{\r\n                labels: dailyData.map(({ data }) => data),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: \"Infected\",\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: \"Deaths\",\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({ incidentRate }) => incidentRate),\r\n                    label: \"Incident Rate\",\r\n                    borderColor: 'black',\r\n                    backgroundColor: 'rgba(21, 0, 255, 0.5)',\r\n                    fill: true,\r\n                },\r\n            ],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar \r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'People',\r\n                            backgroundColor: [\r\n                                'rgba(0, 0, 255, 0.5)',\r\n                                'rgba(0, 255, 0, 0.5)',\r\n                                'rgba(255, 0, 0, 0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value],\r\n                        },\r\n                    ],\r\n                }}\r\n                options={{\r\n                    legend: {display: false},\r\n                    title: {display: true, text: `Current state in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    )\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}